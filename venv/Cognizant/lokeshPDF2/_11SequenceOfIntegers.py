"""
📝 Problem Statement
--------------------
You are given the first six terms of a sequence in an integer array S.
The sequence follows a special pattern:

- Starting from the 7th term, each new term is generated by adding
  the two most recent terms of the sequence.

Formally, if the first six terms are S[0] … S[5]:
    S[6] = S[4] + S[5]
    S[7] = S[5] + S[6]
    S[8] = S[6] + S[7]
    and so on…

Your task is to generate the sequence up to the Nth term and
return a list containing the first N terms.

Input:
1. An integer N – the number of terms to generate.
2. A list of integers S – the first six terms of the sequence.

Output:
Return a list of integers representing the first N terms of the sequence.

Example:
--------
Input:
10
1 2 3 4 5 6

Output:
[1, 2, 3, 4, 5, 6, 11, 17, 28, 45]

Explanation:
- 7th term = 5 + 6 = 11
- 8th term = 6 + 11 = 17
- 9th term = 11 + 17 = 28
- 10th term = 17 + 28 = 45
"""

def sequence_generator(N,S):
    seq = S[:N]
    for i in range(6,N):
        seq.append(seq[i-2]+seq[i-1])
    return seq

N = int(input())
S = list(map(int, input().split()))[:6]
print(sequence_generator(N,S))